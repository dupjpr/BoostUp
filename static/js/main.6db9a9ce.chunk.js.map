{"version":3,"sources":["store/reducers/rootReducer.js","store/store.js","components/Home/actionsFetch.js","components/Home/actionClassify.js","components/Chart/actionChart.js","components/Chart/Chart.jsx","components/Filter/actionFilter.js","components/Filter/Filter.jsx","components/statistics/actionStat.js","components/statistics/Statistics.jsx","components/Home/Home.jsx","App.js","index.js"],"names":["rootReducer","state","action","type","loading","payload","data","error","dataClassify","statusClassify","dataChart","pickState","activeInput","chartConfig","labelStates","dataStates","dataDeath","statUSA","positive","PositiveUSA","death","DeathUSA","store","createStore","statesEEUU","AL","AK","AZ","AR","CA","CO","CT","DE","DC","FL","GA","HI","ID","IL","IN","IA","KS","KY","LA","ME","MD","MA","MI","MN","MS","MO","MT","NE","NV","NH","NJ","NM","NY","NC","ND","OH","OK","OR","PA","RI","SC","SD","TN","TX","UT","VT","VA","WA","WV","WI","WY","applyMiddleware","thunk","getData","classify","filter","setLabel","setData","setDataDeath","setChart","label","dataSet","dispatch","Chart","storeData","useSelector","useDispatch","statesKeys","Object","keys","labelDateCreator","dates","map","item","dateConf","toString","split","forEach","element","idex","push","join","useEffect","length","date","labelState","labelCreator","labels","datasets","backgroundColor","borderColor","borderWidth","fill","className","options","scales","yAxes","ticks","beginAtZero","pick","active","filterData","newData","e","boolean","Filter","stateName","stateInitials","handleChange","selected","filterDataFunction","target","value","filterState","stateUSA","onChange","defaultValue","totalUSA","Statistics","total","totalPositiveUSA","totalDeathUSA","Intl","NumberFormat","format","Home","fetch","then","response","json","dataOrder","stateFilter","classifyData","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6db9a9ce.chunk.js","sourcesContent":["import store from \"../store\"\n\nconst rootReducer = (state, action) => {\n\n  switch (action.type) {\n    case 'LOADING':\n      return {\n        ...state,\n        loading: action.payload\n      }\n    case 'GET_PROFILE':\n      return {\n        ...state,\n        data: action.payload\n      }\n    case 'ERROR':\n      return {\n        ...state,\n        error: action.payload\n      }\n    case 'CLASSIFY':\n      return {\n        ...state,\n        dataClassify: action.payload\n      }\n    case 'STATUS':\n      return {\n        ...state,\n        statusClassify: action.payload\n      }\n    case 'FILTER':\n      return {\n        ...state,\n        dataChart: action.payload\n      }\n    case 'PICK':\n      return {\n        ...state,\n        pickState: action.payload\n      }\n    case 'ACTIVE-OPTION':\n      return {\n        ...state,\n        activeInput: action.payload\n      }\n    case 'LABEL-X':\n      return {\n        ...state,\n        chartConfig: { ...state.chartConfig, labelStates: action.payload }\n      }\n    case 'DATA-CHART':\n      return {\n        ...state,\n        chartConfig: { ...state.chartConfig, dataStates: action.payload }\n      }\n    case 'DATA-CHART-DEATH':\n      return {\n        ...state,\n        chartConfig: { ...state.chartConfig, dataDeath: action.payload }\n      }\n    case 'TOTAL-USA':\n      return {\n        ...state,\n        statUSA: { ...state.statUSA, positive: action.payload.PositiveUSA,  death: action.payload.DeathUSA}\n      }\n    default:\n      return state\n  }\n}\n\nexport default rootReducer;\n","import { createStore, applyMiddleware } from \"redux\";\nimport rootReducer from './reducers/rootReducer';\nimport thunk from 'redux-thunk';\n\nconst initialState = {\n  data: '',\n  dataClassify: '',\n  pickState: '',\n  statUSA: { positive: '', death: '' },\n  dataChart: '',\n  chartConfig: { labelStates: '', dataStates: '', dataDeath: '' },\n  activeInput: false,\n  loading: false,\n  statesEEUU: {\n    AL: 'Alabama',\n    AK: 'Alaska',\n    AZ: 'Arizona',\n    AR: 'Arkansas',\n    CA: 'California',\n    CO: 'Colorado',\n    CT: 'Connecticut',\n    DE: 'Delaware',\n    DC: 'Distrito de Columbia',\n    FL: 'Florida',\n    GA: 'Georgia',\n    HI: 'Hawái',\n    ID: 'Idaho',\n    IL: 'Illinois',\n    IN: 'Indiana',\n    IA: 'Iowa',\n    KS: 'Kansas',\n    KY: 'Kentucky',\n    LA: 'Luisiana',\n    ME: 'Maine',\n    MD: 'Maryland',\n    MA: 'Massachusetts',\n    MI: 'Míchigan',\n    MN: 'Minnesota',\n    MS: 'Misisipi',\n    MO: 'Misuri',\n    MT: 'Montana',\n    NE: 'Nebraska',\n    NV: 'Nevada',\n    NH: 'Nuevo Hampshire',\n    NJ: 'Nueva Jersey',\n    NM: 'Nuevo México',\n    NY: 'Estado de Nueva York',\n    NC: 'Carolina del Norte',\n    ND: 'Dakota del Norte',\n    OH: 'Ohio',\n    OK: 'Oklahoma',\n    OR: 'Oregón',\n    PA: 'Pensilvania',\n    RI: 'Rhode Island',\n    SC: 'Carolina del Sur',\n    SD: 'Dakota del Sur',\n    TN: 'Tennessee',\n    TX: 'Texas',\n    UT: 'Utah',\n    VT: 'Vermont',\n    VA: 'Virginia',\n    WA: 'Estado de Washington',\n    WV: 'Virginia Occidental',\n    WI: 'Wisconsin',\n    WY: 'Wyoming'\n  }\n}\n\nconst store = createStore(rootReducer, initialState, applyMiddleware(thunk));\n\nexport default store;\n","const actions = {\n  loading: (boolean = false) => ({\n    type: 'LOADING',\n    payload: boolean\n  }),\n  getData: (data) => ({\n    type: 'GET_PROFILE',\n    payload: data\n  }),\n  error: (data) => ({\n    type: 'ERROR',\n    payload: data\n  })\n}\n\nconst { loading, getData, error } = actions;\n\nconst getDataAction = () => {\n  return dispatch => {\n    \n    const url = 'data.json';\n    fetch(url)\n      .then(response => response.json())\n      .then(data => dispatch(getData(data)));\n      \n  }\n}\n\nexport { getDataAction };\n","const actions = {\n  classify: (data) => ({\n    type: 'CLASSIFY',\n    payload: data\n  }),\n  filter: (data) => ({\n    type: 'FILTER',\n    payload: data\n  }),\n}\n\nconst { classify, filter } = actions;\n\nconst classifyData = ( dataOrder ) => {\n  return dispatch => {\n    dispatch(classify(dataOrder))\n    dispatch(filter(dataOrder))\n  }\n}\n\nexport { classifyData };","const actions = {\n  setLabel: (data) => ({\n    type: 'LABEL-X',\n    payload: data\n  }),\n  setData: (data) => ({\n    type: 'DATA-CHART',\n    payload: data\n  }),\n  setDataDeath: (data) => ({\n    type: 'DATA-CHART-DEATH',\n    payload: data\n  })\n}\n\nconst { setLabel, setData, setDataDeath } = actions;\n\nconst setChart = (label, dataSet, death) => {\n  return dispatch => {\n    dispatch(setLabel(label));\n    dispatch(setData(dataSet));\n    dispatch(setDataDeath(death));\n  }\n}\n\nexport { setChart };","import { useEffect } from \"react\";\nimport { Bar } from 'react-chartjs-2';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setChart } from './actionChart';\n\nimport './chart.scss';\n\nconst Chart = () => {\n\n  const storeData = useSelector(state => state);\n  const dispatch = useDispatch();\n\n  const statesKeys = Object.keys(storeData.statesEEUU);\n\n  function labelCreator() {\n\n    let labelState = [];\n\n    statesKeys.forEach(element => {\n      labelState = [...labelState, storeData.statesEEUU[element]]\n    });\n\n    return labelState\n  }\n\n  function labelDateCreator(dates) {\n\n    const newDate = dates.map((item) => {\n\n      const dateConf = [];\n\n      item.toString().split('').forEach((element, idex) => {\n        if (idex === 3 || idex === 5) {\n          element = `${element}/`\n        }\n        dateConf.push(element)\n      });\n\n      return dateConf.join('')\n    });\n\n    return newDate;\n\n  }\n\n  useEffect(() => {\n\n    if (storeData.pickState) {\n\n      if (storeData.dataChart.length === 1) {\n        const dates = storeData.dataChart[0].map((item) => item.date);\n        const data = storeData.dataChart[0].map((item) => item.positive);\n        const death = storeData.dataChart[0].map((item) => item.death);\n        dispatch(setChart(labelDateCreator(dates), data, death));\n      } else {\n        const dates = storeData.dataChart.map((item) => item.date);\n        const data = storeData.dataChart.map((item) => item.positive);\n        const death = storeData.dataChart.map((item) => item.death);\n        dispatch(setChart(labelDateCreator(dates), data, death));\n      }\n\n    } else {\n\n      let dataStates = [];\n      let dataDeath = [];\n\n      storeData.dataChart && storeData?.dataChart.forEach((item) => dataStates = [...dataStates, item[0].positive]);\n      storeData.dataChart && storeData?.dataChart.forEach((item) => dataDeath = [...dataDeath, item[0].death]);\n\n      dispatch(setChart(labelCreator(), dataStates, dataDeath));\n\n    }\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [storeData.dataChart]);\n\n  const data = {\n    labels: storeData.chartConfig.labelStates,\n    datasets: [\n      {\n        type: 'bar',\n        label: 'Positive Cases',\n        data: storeData.chartConfig.dataStates,\n        backgroundColor: [\n          'rgba(255, 99, 132, 0.2)',\n          // 'rgba(54, 162, 235, 0.2)',\n          // 'rgba(255, 206, 86, 0.2)',\n          // 'rgba(75, 192, 192, 0.2)',\n          // 'rgba(153, 102, 255, 0.2)',\n          // 'rgba(255, 159, 64, 0.2)',\n        ],\n        borderColor: [\n          'rgba(255, 99, 132, 1)',\n          // 'rgba(54, 162, 235, 1)',\n          // 'rgba(255, 206, 86, 1)',\n          // 'rgba(75, 192, 192, 1)',\n          // 'rgba(153, 102, 255, 1)',\n          // 'rgba(255, 159, 64, 1)',\n        ],\n        borderWidth: 1,\n      },\n      {\n        type: 'line',\n        label: 'Death',\n        borderColor: 'rgb(54, 162, 235)',\n        borderWidth: 2,\n        fill: false,\n        data: storeData.chartConfig.dataDeath,\n      },\n    ],\n  };\n\n  const options = {\n    scales: {\n      yAxes: [\n        {\n          ticks: {\n            beginAtZero: true,\n          },\n        },\n      ],\n    },\n  };\n  return (\n    <div className='container-chart'>\n      <Bar data={data} options={options} />\n    </div>\n  );\n}\n\nexport default Chart;","const actions = {\n  filter: (data) => ({\n    type: 'FILTER',\n    payload: data\n  }),\n  pick: (data) => ({\n    type: 'PICK',\n    payload: data\n  }),\n  active: (data) => ({\n    type: 'ACTIVE-OPTION',\n    payload: data\n  })\n}\n\nconst { filter, pick, active } = actions;\n\nconst filterData = (newData, e, boolean) => {\n  return dispatch => {\n    dispatch(filter(newData))\n    dispatch(pick(e))\n    dispatch(active(boolean))\n  }\n}\n\nexport { filterData };","import { useDispatch, useSelector } from \"react-redux\";\nimport { filterData } from './actionFilter';\n\nimport './filter.scss';\n\nconst Filter = () => {\n\n  const storeData = useSelector(state => state);\n  const dispatch = useDispatch();\n\n  const statesKeys = Object.keys(storeData.statesEEUU);\n\n  let labelState = []\n\n  statesKeys.forEach(element => {\n    labelState = [...labelState, { stateName: storeData.statesEEUU[element], stateInitials: element }]\n  });\n\n  const handleChange = (e, selected) => {\n\n    filterDataFunction(e.target.value, selected)\n  }\n\n  const filterState = (value) => {\n    return storeData?.dataClassify.filter((item) => item[0].state === value)\n  }\n\n  const filterDataFunction = (e, selected) => {\n\n    if (selected === 'state') {\n      if (e !== \"All states\") {\n        const newData = filterState(e)\n        dispatch(filterData(newData, e, true));\n      } \n      else {\n        dispatch(filterData(storeData?.dataClassify, ''));\n      }\n    }\n\n    if (selected === 'time') {\n      if (e === \"Last 7 days\") {\n\n        if (storeData.pickState) {\n          const stateUSA = filterState(storeData.pickState);\n          const newData = stateUSA[0].filter((item, idex) => idex <= 6);\n          dispatch(filterData(newData, storeData.pickState, true));\n        } \n      }\n      if (e === \"Last 1 month\") {\n        if (storeData.pickState) {\n          const stateUSA = filterState(storeData.pickState);\n          const newData = stateUSA[0].filter((item, idex) => idex <= 29);\n          dispatch(filterData(newData, storeData.pickState, true));\n        } \n      }\n      if (e === \"All Time\") {\n        if (storeData.pickState) {\n          const stateUSA = filterState(storeData.pickState);\n          dispatch(filterData(stateUSA, storeData.pickState, true));\n        } else {\n          dispatch(filterData(storeData.dataClassify, storeData.pickState));\n        }\n\n      }\n    }\n\n  }\n\n  return (\n    <div className='container-inputs'>\n      <select value={storeData.pickState} onChange={(e) => handleChange(e, 'state')}>\n        <option defaultValue key='All states' value=\"All states\">All States</option>\n        {labelState.map((item) => (\n          <option key={item.stateInitials} value={item.stateInitials}>{item.stateName}</option>\n        ))}\n      </select>\n      {storeData.activeInput && <select  onChange={(e) => handleChange(e, 'time')}>\n        <option defaultValue value=\"All Time\">All time</option>\n        <option value=\"Last 7 days\">Last 7 days</option>\n        <option value=\"Last 1 month\">Last 1 month</option>\n      </select>}\n    </div>\n  );\n}\n\nexport default Filter;\n","const actions = {\n  totalUSA: (data) => ({\n    type: 'TOTAL-USA',\n    payload: data\n  })\n}\n\nconst { totalUSA } = actions;\n\nconst stat = (total) => {\n\n  return dispatch => {\n    dispatch(totalUSA(total));\n    // dispatch(deathUSA(death));\n\n  }\n}\n\nexport { stat };","import { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { stat } from './actionStat';\n\nimport './stats.scss';\n\nconst Statistics = () => {\n\n  const storeData = useSelector(state => state);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n\n    let totalPositiveUSA = 0;\n    let totalDeathUSA = 0;\n\n    storeData.dataClassify.forEach(element => {\n      totalPositiveUSA += element[0].positive;\n      totalDeathUSA += element[0].death;\n    });\n\n    dispatch(stat({ \n      PositiveUSA: new Intl.NumberFormat().format(totalPositiveUSA), \n      DeathUSA: new Intl.NumberFormat().format(totalDeathUSA) \n    }));\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [storeData.dataClassify]);\n\n  return (\n    <div className='container-stats'>\n      <div>Total positive cases USA: {storeData.statUSA.positive}</div>\n      <div>Total deaths USA: {storeData.statUSA.death}</div>\n    </div>\n  );\n}\n\nexport default Statistics;","import { useDispatch, useSelector } from \"react-redux\";\nimport { useEffect } from 'react';\nimport { getDataAction } from './actionsFetch';\nimport { classifyData } from './actionClassify';\nimport Chart from \"../Chart/Chart\";\nimport Filter from \"../Filter/Filter\";\nimport Statistics from \"../statistics/Statistics\";\nimport store from \"../../store/store\";\n\nimport './home.scss';\n\nconst Home = () => {\n\n  const storeData = useSelector(state => state);\n  const dispatch = useDispatch();\n\n  const statesKeys = Object.keys(storeData.statesEEUU);\n\n  useEffect(() => {\n    dispatch(getDataAction());\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n\n    if (storeData.data) {\n      let dataOrder = [];\n      statesKeys.forEach(element => {\n        const stateFilter = storeData.data.filter((item) => item.state === element)\n        dataOrder = [...dataOrder, stateFilter]\n      })\n      dispatch(classifyData(dataOrder));\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [storeData.data]);\n\n  return (\n    <div className='app-container'>\n      <h1 className='app-container-title'>EE.UU COVID DATA</h1>\n      <div className='app-container-filter'>\n        <Filter />\n        {storeData.dataClassify && <Statistics />}\n      </div>\n      {storeData.dataClassify && <Chart />}\n    </div>\n  );\n}\n\nexport default Home;","import { Provider } from \"react-redux\";\n\nimport store from './store/store';\n\nimport './utilities/Normalize.scss';\nimport Home from \"./components/Home/Home\";\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Home/>\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}